ver ../notas/separarRecursos.blend.odt 

Método 1: Ejecutar desde una shell:
blender --background --python cg-GenGame01.py


Método 2:
Crear un archivo nuevo/vacio de blender y ejecutar en la consola
el comando:
exec(compile(open("cg-GenGame01.py").read(), "cg-GenGame01.py", 'exec'))



DONE:

Para Insertar diccionarios tipo json como controladores tipo python y 
leerlos con codigo como este.

"""Our generator added a controller of type 'PYTHON' to object 
'Player' named 'cg-data.json'
Search for it and parse it.
"""
if 'cg-data.json' not in globalDict : 
    print("Reading from cg-data.json controller")
    if 'cg-data.json' in Player.controllers:
        data = json.loads(Player.controllers['cg-data.json'].script)
        #print (data)
        globalDict.update(data)
        globalDict['cg-data.json'] = 'From internal text'

cg-GenGame01.py -> importLibrary 
--> Los objetos cuyo nombre comienza por "_" no son importados
    Esto es útil para ignorar luces y otros objetos.

--> Las posiciones iniciales de los monstruos se elijen como la más alejadas
    del jugador y el resto de monstruos. Esto hace que embosquen mejor.

Limpieza del fichero cg-spider.blend
 --> El token era una copia completa del personaje, ahora es un cubo simple
 --> La araña tenía dos mallas para el cuerpo, borramos la menos detallada.
 --> Renombrado y simplificación de la escena.
 --> Se ha añadido un suelo marcado con "_" 

cg-SkyDomeNight
  --> Se ha creado un skydome nocturno en cg-skyDomeNight.blend
  --> El generador de escenarios se encarga de importarlo en la capa 0
      y reescalarlo al tamaño adecuado.
